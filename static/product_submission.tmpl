{{template "header" .PageTitle}}
{{template "navbar"}}
{{range .PageError}}
{{template "error" .}}
{{end}}
    <div class="container mt-5">
        <h2 class="mb-4">Product Submission Form</h2>

        <!-- Bootstrap Card -->
    <div class="card">
        <div class="card-body">
    
        <!-- Description Header -->
        <h3 class="description-header">Description</h3>
    
        <form id="productForm" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label for="productBrand">Brand</label>
                    <input type="text" class="form-control form-custom-border" id="productBrand" name="productBrand" placeholder="Brand" required>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="productName">Product Name</label>
                    <input type="text" class="form-control form-custom-border" id="productName" list="productNamesList" name="productName" placeholder="Product Name" required>
                    <datalist id="productNamesList"></datalist>
                </div>
            </div>

        <!-- Form Section 2: Weight -->
        <div class="form-row">
            <div class="col-md-4 mb-3">
                <label for="productWeight">Weight</label>
                <input type="text" class="form-control form-custom-border" id="productWeight" name="productWeight" placeholder="Weight" required>
            </div>
        </div>

        <!-- Form Section 3: Price -->
        <div class="form-row">
            <div class="col-md-4 mb-3">
                <label for="productPrice">Price</label>
                <input type="text" class="form-control form-custom-border" id="productPrice" name="productPrice" placeholder="Price" required>
            </div>
        </div>

        <!-- Summary Paragraph -->
        <p id="summaryParagraph" class="mt-4 mb-4"></p>

        <h3 class="nutritional-label mt-4">Nutritional Facts</h3>
        <div class="form-row">
            <div class="col-md-4 mb-3">
                <label for="productCalories">Calories</label>
                <input type="number" class="form-control form-custom-border" id="productCalories" name="productCalories" placeholder="Calories" required>
                <div class="invalid-feedback">
                    Please provide calorie information.
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="productFat">Total Fat (g)</label>
                <input type="number" class="form-control form-custom-border" id="productFat" name="productFat" placeholder="Total Fat" required>
                <div class="invalid-feedback">
                    Please provide total fat in grams.
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="productSodium">Sodium (mg)</label>
                <input type="number" class="form-control form-custom-border" id="productSodium" name="productSodium" placeholder="Sodium" required>
                <div class="invalid-feedback">
                    Please provide sodium in milligrams.
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-md-4 mb-3">
                <label for="productCarbohydrate">Carbohydrate (g)</label>
                <input type="number" class="form-control form-custom-border" id="productCarbohydrate" name="productCarbohydrate" placeholder="Carbohydrate" required>
                <div class="invalid-feedback">
                    Please provide carbohydrate in grams.
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="protein">Protein (g)</label>
                <input type="number" class="form-control form-custom-border" id="protein" placeholder="Protein" required>
                <div class="invalid-feedback">
                    Please provide protein in grams.
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="productAllergens">Allergens</label>
                <input type="text" class="form-control form-custom-border" id="productAllergens" name="productAllergens" placeholder="Allergens">
                <div class="invalid-feedback">
                    Please list any allergens.
                </div>
            </div>
        </div>

        <button class="btn btn-custom" type="submit">Submit Product</button>
    </form>
</div>
</div>
</div>

<script>
(function() {
    'use strict';

    document.addEventListener('input', function() {
        const brand = document.getElementById('productBrand').value;
        const productName = document.getElementById('productName').value;
        const weight = document.getElementById('productWeight').value;
        const price = document.getElementById('productPrice').value;

        const summaryParagraph = document.getElementById('summaryParagraph');
        summaryParagraph.textContent = `Brand: ${brand}, Product Name: ${productName}, Weight: ${weight}, Price: ${price}`;
    });

    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
        form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        }, false);
    });
})();
document.getElementById('submitButton').addEventListener('click', function() {
    const form = document.getElementById('productForm');
    if (form.checkValidity()) {
        // Form is valid, proceed with submission
        form.submit();
    } else {
        // Form is invalid, show validation errors
        form.classList.add('was-validated');
    }
});
function Autocomplete(){
    fetch('https://world.openfoodfacts.org/products.json')
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    const products = data.tags;
    if (!Array.isArray(products)) {
      throw new Error('Products data is not an array');
    }
    const dataList = document.getElementById("productNamesList");
    products.forEach(product => {
      const option = document.createElement('option');
      option.value = product.generic_name;
      option.id = product.id;
      dataList.appendChild(option);
    });
  })
  .catch(error => {
    console.error('Error fetching or processing JSON data:', error);
  });
}
</script>
{{template "footer"}}
