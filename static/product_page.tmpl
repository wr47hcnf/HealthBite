{{template "header" .PageTitle}}
{{template "navbar"}}
{{range .PageError}}
{{template "error" .}}
{{end}}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">


<section class="headline">
  <div class="container">
    <h1>Product Details</h1>
  </div>
</section>
{{range .Products}}
<section class="container">
  <div class="card ix">
    <div class="row">
      <!-- Left Column with Image -->
      <div class="col-md-6">
        <img src="image.jpg" class="card-img-top" alt="Product Image">
      </div>
      <!-- Right Column with Description and Price -->
      <div class="col-md-6">
        <div class="card-body">
          <h2 class="card-title">{{.ProdName}}</h2>
          <div class="description">
            <h3>Description</h3>
            <p><strong>Brand:</strong> {{.ProdBrand}}</p>
            <p><strong>Weight:</strong> {{.ProdWeight}}</p>
            <div class="nutritional-facts">
              <h4>Nutritional Facts</h4>
              <ul class="list-unstyled">
                <li><strong>Calories:</strong> {{.ProdCalories}}</li>
                <strong>Total Fat:</strong> {{.ProdFat}}</li>
                <li><strong>Sodium:</strong> {{.ProdSodium}}</li>
                <li><strong>Total Carbohydrates:</strong> {{.ProdCarbs}}</li>
                <li><strong>Protein:</strong> {{.ProdProtein}}</li-->
                <li><strong>Allergens:</strong> {{range .ProdAllergens}}{{.}}{{end}}</li>
              </ul>
            </div>
          </div>
          <div class="price">
            <h3>Price</h3>
            <p>{{.ProdPrice}}</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
{{end}}

<!-- User Reviews Carousel Section -->
<div id="carouselExample" class="carousel slide" data-bs-ride="carousel" data-bs-interval="3000"> <!-- Set the interval to 3000 milliseconds (3 seconds) -->
  <div class="carousel-inner">
    <div class="carousel-item active">
      <div class="row">
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="carousel-item">
      <div class="row">
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="card">
            <div class="card-body hate">
              <h6 class="card-title love">Reviewer 1</h6>
              <p class="card-text love">Review content goes here.</p>
              <div class="d-flex justify-content-between align-items-center">
                <button type="button" class="btn btn-sm btn-success upvote-btn">Upvote</button>
                <button type="button" class="btn btn-sm btn-danger downvote-btn">Downvote</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Add more carousel items (slides) as needed -->
  </div>

  <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<script>
// Get all the upvote and downvote buttons
const upvoteButtons = document.querySelectorAll('.upvote-downvote[aria-label="Upvote"]');
const downvoteButtons = document.querySelectorAll('.upvote-downvote[aria-label="Downvote"]');

// Add event listeners to the upvote buttons
upvoteButtons.forEach(button => {
  button.addEventListener('click', () => {
    try {
      // Assuming there is a vote count element associated with each review
      const voteCountElement = button.closest('.card-body').querySelector('.vote-count');
      
      if (voteCountElement && !isNaN(parseInt(voteCountElement.textContent))) {
        // Update the vote count when the upvote button is clicked
        voteCountElement.textContent = parseInt(voteCountElement.textContent) + 1;
      } else {
        throw new Error('Invalid vote count element');
      }
    } catch (error) {
      console.error('Error while processing upvote:', error);
      // You can add further error handling logic here, such as displaying an error message to the user
    }
  });
});

// Add event listeners to the downvote buttons
downvoteButtons.forEach(button => {
  button.addEventListener('click', () => {
    try {
      // Assuming there is a vote count element associated with each review
      const voteCountElement = button.closest('.card-body').querySelector('.vote-count');
      
      if (voteCountElement && !isNaN(parseInt(voteCountElement.textContent))) {
        // Update the vote count when the downvote button is clicked
        voteCountElement.textContent = parseInt(voteCountElement.textContent) - 1;
      } else {
        throw new Error('Invalid vote count element');
      }
    } catch (error) {
      console.error('Error while processing downvote:', error);
      // You can add further error handling logic here, such as displaying an error message to the user
    }
  });
});
</script>

</body>
</html>
